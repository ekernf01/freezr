% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/freezr.R
\name{configure_flash_freeze}
\alias{configure_flash_freeze}
\title{Return a function "flash_freeze" that saves on project-specific boilerplate compared to "freeze".}
\usage{
configure_flash_freeze(
  project_directory = getwd(),
  setup_scripts = NULL,
  repos_to_track = project_directory
)
}
\arguments{
\item{project_directory}{Where's your freezr project? Should contain subdirectories "results" and "scripts." Try "freezr::create_empty_project".}

\item{setup_scripts}{Scripts to be run first every time you flash_freeze an analysis. Helps avoid copy-pasting code. For example, a setup script might load packages, utility functions, or reusable functions that you haven't yet packaged up.}

\item{repos_to_track}{Helps track outside repos. See corresponding arg of `freeze`.}
}
\description{
Return a function "flash_freeze" that saves on project-specific boilerplate compared to "freeze".
}
\details{
When run without args, this "flash_freeze" runs the setup scripts and saves to the "interactive" folder. Your namespace retains objects created by the setup scripts, so you can experience what your analysis scripts are experiencing. 
Otherwise, "flash_freeze" takes these args: 
\itemize{
\item "analyses_to_run" should be a character vector containing paths to R or .Rmd files in your "scripts" folder
\item "results_subdir" should be a character vector to be added onto the "results" folder before
It's optional, and if NULL (recommended), it names the results subfolder after the subfolder 
of the last analysis script. This way, the organizational structure is mirrored between the
analysis scripts and the results.
\item ... extra args passed to "freeze"
}
}
